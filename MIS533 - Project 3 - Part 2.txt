-- 1. List the reservations made for after February 15, 2022.

SELECT *
FROM RESERVATION
WHERE BOOKING_DATE >= '15-Feb-2022'

-- 2. Find the total number of no-shows, that is, customers who made reservations, but no rental contracts were created by the end of the time period mentioned in Phase 1.

SELECT CX.FULL_NAME, C.CONTRACT_ID, R.*
FROM RESERVATION R
LEFT JOIN CONTRACT C ON R.RESERVATion_ID = C.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON R.CUSTOMER_ID = CX.CUSTOMER_ID
WHERE C.RESERVATION_ID IS NULL


-- 3. List the names and cell phone numbers of all customers who made reservations for SUVs.

SELECT C.FULL_NAME, C.PHONE_NUMBER, R.*
FROM RESERVATION R
LEFT JOIN CUSTOMER C ON R.CUSTOMER_ID = C.CUSTOMER_ID
WHERE R.BOOKED_CAR_TYPE = 'SUV'

-- 4. List the names of the customers and the total amount of each rental for all rentals of a compact car since January 1st, 2022

SELECT  CX.CUSTOMER_ID, CX.FULL_NAME, C.TYPE_OF_CAR_RENT, SUM(C.TOTAL_PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM CONTRACT C
LEFT JOIN RESERVATION R ON C.RESERVATION_ID = R.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON R.CUSTOMER_ID = CX.CUSTOMER_ID
WHERE C.TYPE_OF_CAR_RENT = 'Compact' AND R.BOOKING_DATE >= '01-JAN-2022'
GROUP BY CX.CUSTOMER_ID, CX.FULL_NAME, C.TYPE_OF_CAR_RENT

-- 5. Provide the total number of cars by category (compact, mid-sized, etc.) held by Ames Rental Car.

SELECT TYPE_OF_CAR, COUNT(INVENTORY_ID) AS COUNT_OF_CAR 
FROM CAR_INVENTORY
GROUP BY TYPE_OF_CAR

-- 6. Provide the number of rental cars (total) that are available to rent, as of March 3rd, 2022.

SELECT COUNT(INVENTORY_ID) AS Count_of_Available_Cars
FROM CAR_INVENTORY
WHERE DATE_OUT < = '03-Mar-2022'


-- 7. Provide the total revenue earned in rentals for the company from the period of February 1st, 2022-February 28th, 2022.

SELECT SUM(FINAL_PAYMENT) AS FEBRUARY_REVENUE
FROM RECEIPT
WHERE PAYMENT_DATE_TIME BETWEEN '01-FEB-2022' AND '28-FEB-2022'

-- 8. Which customer brought in the highest amount of revenue between January 1st, 2022 and April 30th, 2022?

SELECT CX.CUSTOMER_ID, CX.FULL_NAME, SUM(C.TOTAL_PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM CONTRACT C
LEFT JOIN RESERVATION R ON R.RESERVATION_ID = C.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON R.CUSTOMER_ID = CX.CUSTOMER_ID
WHERE R.BOOKING_DATE BETWEEN '01-JAN-2022' AND '30-APR-2022'
GROUP BY CX.CUSTOMER_ID, CX.FULL_NAME
HAVING SUM(C.TOTAL_PURCHASE_AMOUNT) =
(SELECT MAX(Total_Amount) AS TOTAL_AMOUNT
FROM
(SELECT CX.CUSTOMER_ID, CX.FULL_NAME, SUM(C.TOTAL_PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM CONTRACT C
LEFT JOIN RESERVATION R ON R.RESERVATION_ID = C.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON R.CUSTOMER_ID = CX.CUSTOMER_ID
WHERE R.BOOKING_DATE BETWEEN '01-JAN-2022' AND '30-APR-2022'
GROUP BY CX.CUSTOMER_ID, CX.FULL_NAME))




-- 9. Which employee has been with the company the longest?

SELECT EMPLOYEE_ID, FULL_NAME, HIRE_DATE
FROM EMPLOYEE
WHERE HIRE_DATE =
(SELECT MIN(HIRE_DATE) AS HIRE_DATE
FROM EMPLOYEE)


-- 10. Which customer has rented the most cars from the company as measured in number of days?

SELECT CX.CUSTOMER_ID, CX.FULL_NAME, CAST(C.DATE_AND_TIME_IN AS DATE) - CAST(C.DATE_AND_TIME_OUT AS DATE) AS Diff 
FROM CONTRACT C
LEFT JOIN RESERVATION R ON R.RESERVATION_ID = C.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON CX.CUSTOMER_ID = R.CUSTOMER_ID
WHERE CAST(C.DATE_AND_TIME_IN AS DATE) - CAST(C.DATE_AND_TIME_OUT AS DATE) =
(SELECT MAX(Diff)
FROM
(SELECT CX.CUSTOMER_ID, CX.FULL_NAME, SUM(CAST(C.DATE_AND_TIME_IN AS DATE) - CAST(C.DATE_AND_TIME_OUT AS DATE)) AS Diff 
FROM CONTRACT C
LEFT JOIN RESERVATION R ON R.RESERVATION_ID = C.RESERVATION_ID
LEFT JOIN CUSTOMER CX ON CX.CUSTOMER_ID = R.CUSTOMER_ID
GROUP BY CX.CUSTOMER_ID, CX.FULL_NAME))


